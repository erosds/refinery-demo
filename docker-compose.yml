version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: demo-timescaledb
    environment:
      POSTGRES_DB: refinery_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: demo-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Viewer
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-config/provisioning:/etc/grafana/provisioning
    depends_on:
      - timescaledb

  opc-simulator:
    build: ./opc-simulator
    container_name: demo-opc-simulator
    ports:
      - "4840:4840"
    healthcheck:
      test: ["CMD-SHELL", "netstat -ln | grep :4840 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  python-client:
    build: ./python-client
    container_name: demo-python-client
    depends_on:
      timescaledb:
        condition: service_healthy
      opc-simulator:
        condition: service_healthy
    environment:
      DB_HOST: timescaledb
      OPC_HOST: opc-simulator
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: refinery_db
    restart: unless-stopped

  api-server:
    build: ./api-server
    container_name: demo-api-server
    ports:
      - "5000:5000"
    depends_on:
      timescaledb:
        condition: service_healthy
      opc-simulator:
        condition: service_healthy
    environment:
      DB_HOST: timescaledb
      OPC_HOST: opc-simulator
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: refinery_db
      FLASK_ENV: production
    restart: unless-stopped

volumes:
  timescale_data:
  grafana_data:
